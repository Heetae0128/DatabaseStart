
오라클이 제공하는 내장함수

함수 -특정 기능을 제공한다
       1. 누군가(p/g)이 만들어놓은 함수
       2. 내가 직접 만들어지는 함수

함수를 사용하는 입장에서는 call(호출) 
값(매개변수)을 넘겨줄수 있다.
함수가 처리(리턴return)한다.

"함수를 콜하다."
'()' = call

함수는 특정 기능을 제공한다.
그 기능은 lower로 매개변수인 'ABCD'로
call하면 'abcd'로 리턴한다.

select lower('ABCD') from dual;
1. 오라클에서 이미 만들어서 제공하는 내장함수
매개변수의 값을 소문자로 바꾸는 기능
2. lower()는 함수를 call하는 작업, 이때 매개변수로 문자열 'ABCD' 전달
3. 함수는 결과값 리턴함. 결과 값은 abcd

group by 정의 : 1. 튜플이 선정된 후 동작한다. from > where > group by

	         2. 그룹별 통계를 내야 할 때 groub by를 쓴다.
ex) 그룹별 평균이 어떻게 되는가?

group by 쿼리문

select grade,  count(*) 인원수
from users
group by grade;

응용1. 그룹별 인원수를 출력하되 학년을 오름차순으로 정렬
select grade,  count(*) 인원수
from users
group by grade
order by grade desc;

응용2. 그룹별 최고점과 최저점을 출력하시오.
select grade, max(point) 최고점, min(point) 최저점
from users
group by grade;

응용3. 그룹별 최고점을 획득한 사람의 이름은?
select max(point) 최고점, name 이름
from users
group by grade; //error 이유 - name은 그룹화되지 않음

확인문제
1. 3학년과 4학년 각각 그룹의 인원수를 출력하시오
select grade,count(*)
from users
where grade = 3 or grade = 4
group by grade;

2. 1학년과 2학년의 최고점과 최저점의 점수 차이를 출력하시오.
select grade,max(point)-min(point)
from users
where grade= 1 or grade=2
group by grade;

3. 주민번호 2자리는 태어난 년도이다.
같은 년도에 태어난 사람을 카운팅 하시오
이때 태어난년도와 인원수로 출력한다.
그룹의 기준은 주민번호 2자리.... jumin컬럼 으로 그룹의 기준을 정의 substr(jumin,1,2)
select substr(jumin,1,2) 태어난년도, count(*) 인원수
from users
group by substr(jumin,1,2);

연구과제

그룹을 만들 때 그룹별 조건을 지정할 수 있다.
예를 들어, 그룹의 인원이 3명 이상인 그룹의 인원수를 출력하시오

이 지시사항은 그룹별로 인원을 카운팅하고 그룹중에 인원수가 3명 이상인
그룹만 선택하는 의미이다.

그룹의 조건을 지정하는 방법을 찾아 보세요

다음 문제를 쿼리문으로 완성하세요.
그룹의 인원이 3명 이상인 그룹의 인원수를 출력하시오.

select grade, count(*) 인원수
from users
group by grade
having count(*) >= 3;

having : 그룹을 선정하기 위한 조건
having절은 단독으로 사용할 수 없다.


전체평균보다 큰 학년의 평균점수를 출력하시오.

select grade, avg(point)
from users
group by grade having avg(point)>=
(select avg(point) from users);  << 서브쿼리의
결과값이 전체평균으로 그룹의 조건을 완성
avg(point)>=서브쿼리결과값(전체평균)

서브쿼리는 본쿼리 안에 소괄호로 시작하는 select문
서브쿼리의 결과값을 본쿼리의 활용한다.

서브쿼리는 본쿼리의 조건으로 활용이 가능 - where,gaving
본쿼리의 테이블로 활용가능 - from
본쿼리의 원하는 컬럼에서 활용가능 - select

정리
select에서 서브 쿼리를 활용하면 > 스칼라 서브쿼리
from에서 서브 쿼리를 활용하면 > 인라인뷰 서브쿼리
인라인뷰 서브쿼리
select m.name, m.addr
from (select * from users) m
where m.grade=3;

가장높은 점수를 획득한 사람의 이름과 점수는 ?
select name,point
from users
where point = (select max(point) from users);


